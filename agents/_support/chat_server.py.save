from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import os
import openai  # or anthropic client

# If youâ€™re using OpenAI:
openai.api_key = os.getenv("OPENAI_API_KEY")

app = FastAPI()

class ChatRequest(BaseModel):
    message: str

class ChatResponse(BaseModel):
    response: str

@app.post("/chat", response_model=ChatResponse)
async def chat_endpoint(req: ChatRequest):
    # Example with OpenAI ChatCompletion:
    try:
        completion = openai.ChatCompletion.create(
            model="gpt-4o-mini",
            messages=[{"role": "system", "content": "You are Clay-I, an Apple HIG + Navigation expert."},
                      {"role": "user", "content": req.message}],
            temperature=0.7
        )
        reply = completion.choices[0].message.content
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
    return {"response": reply}

